<?php
/**
 * MeterUpdatePayloadTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  SunDataMetropolisClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * SunData API
 *
 * ### Requirements * an account with the credentials;   * e-mail address   * password ### Getting Started 1. Use the Sign-In endpoint to obtain a bearer token.   * open the 'authorize' of the swagger and paste the bearer-token here   * note: the authorization is persisted in the swagger but eventually the token will expire 2. Use the user/me/companies endpoint to find out which company_ids are associated with the account 3. Validate by using, for example, the Companies endpoint (GET)   * fill the company-id ### Upgrade guide * v1.6.0   * Adds the plant-tags endpoints, for attaching and detaching tags * v2.0.0   * Attaching tags and companies during plant creation or updating is no longer supported.     These should now be attached using the plant-tags and plant-companies endpoints.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: admin@sundata.nl
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace SunDataMetropolisClient\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * MeterUpdatePayloadTest Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     SunDataMetropolisClient
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class MeterUpdatePayloadTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "MeterUpdatePayload"
     */
    public function testMeterUpdatePayload()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "plant_id"
     */
    public function testPropertyPlantId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "amount_in_cents_per_kwh"
     */
    public function testPropertyAmountInCentsPerKwh()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "peak_in_watt"
     */
    public function testPropertyPeakInWatt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "p90_in_kwh"
     */
    public function testPropertyP90InKwh()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "orientation_in_degrees"
     */
    public function testPropertyOrientationInDegrees()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "angle_in_degrees"
     */
    public function testPropertyAngleInDegrees()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "has_mixed_panel_orientations"
     */
    public function testPropertyHasMixedPanelOrientations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "retired_on"
     */
    public function testPropertyRetiredOn()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
